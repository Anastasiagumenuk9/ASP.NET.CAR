@using Application.Cities.Queries
@using Domain.Entities
@using Microsoft.AspNetCore.Http
@using System.Security.Claims;

@{
    ViewData["Title"] = "AddRent";
}

<div class="intro-login">
    <div class="container-fluid" id="intro">
        <div class="intro__inner" id="inner"> </div>
    </div>
    <div class="row container-fluid align-self-center align-bottom mt-5">
        <div class="col-1">

        </div>
        <div class="col-10 shadow mb-5 bg-white rounded align-self-center acc-container p-md-5 unselectable">
            <div class="row">
                <div class="col-md-4 col-sm-12">
                    <div class="row">
                        <div class="col-12">
                                <select class="custom-select form-control" id="city-list">
                                    @foreach (var city in Model.Cities)
                                    {
                                        <option value="@city.Id" class="dropdown-item">@city.Name</option>
                                    }
                                </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <label for="meeting-time">Choose a start date for your rent:</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <input type="date" id="meeting-time"
                                   name="meeting-time" class="form-control">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <label for="meeting-time">Choose a finish date for your rent:</label>
                        </div>                
                    </div>
                    <div class="row">
                        <div class="col-12">
                                <input type="date" id="meeting-timee"
                                       name="meeting-time" class="form-control">
                        </div>             
                    </div>
                </div>
                <div class="col-md-4 col-sm-12">
                    <div class="row">
                        <div class="col-12">
                            <select class="custom-select form-control" id="location-list" name="location-list">
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <label for="meeting-time">Choose a start time:</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <input type="time" id="time"
                                   name="time" class="form-control">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <label for="meeting-time">Choose a finish time:</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                                <input type="time" id="time2"
                                       name="time2" class="form-control">
                        </div>
                    </div>
                </div>
                <div class="col-md-4 col-sm-12 text-center">
                     <p class="text-uppercase font-weight-bold" id="car-val">@Model.Car.Name</p>
                     @Html.Raw("<img style='width:200px; height:120px;' class='' src=\"data:image/jpeg;base64,"
                                                    + Convert.ToBase64String(@Model.Car.Photo) + "\" />")
                </div>
            </div>
            <div class="row">
                <div class="col-md-8 col-sm-12 col-xs-12 mt-3">
                    <input type="text" id="sum"
                           name="sum" class="form-control" readonly>
                </div>
                <div class="col-md-4 col-sm-12 col-xs-12">
                    <input class="btn btn-log" id="rent" disabled value="Rent" />
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/jscript">
        $(document).ready(function () {
            let sum = 0;

            $("#city-list").change(function (event) {
                validateInputs();
            });

            $("#location-list").change(function (event) {
                validateInputs();
            });

            $("#meeting-time").change(function (event) {
                validateInputs();
            });

            $("#meeting-timee").change(function (event) {
                validateInputs();
            });

            $("#time").change(function (event) {
                validateInputs();
            });

            $("#time2").change(function (event) {
                validateInputs();
            });

            function validateInputs() {
                var disableButton = false;

                var city = jQuery.trim($("#city-list").val());
                var location = jQuery.trim($("#location-list").val());
                var date1 = jQuery.trim($("#meeting-time").val());
                var date2 = jQuery.trim($("#meeting-timee").val());
                var time1 = jQuery.trim($("#time").val());
                var time2 = jQuery.trim($("#time2").val());

                if (city.length == 0 || location == 0 || date1.length == 0 || date2.length == 0 || time1.length == 0 || time2.length == 0)
                    disableButton = true;

                $("#rent").attr('disabled', disableButton);
            }

            $("#city-list").change(function () {
                console.log("city change");
                $("#location-list").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetLocationsViaCities", "Location")',
                    dataType: 'json',
                    data: { id: $("#city-list").val() },
                    success: function (mems) {
                        console.log("function work");
                        var response = JSON.parse(JSON.stringify(mems));
                        var markup;
                        for (var x = 0; x < response.length; x++) { markup += "<option value=" + response[x].value + ">" + response[x].text + "</option>"; }
                        $("#location-list").html(markup).show();
                    },
                    error: function (ex) {
                        lert('Failed to retrieve states.' + ex);
                    }
                });
            return false;
            })

            $("#meeting-time").on("click", date_Click);
            $("#meeting-timee").on("click", function () {
                var dateFor = new Date();
                var date = new Date($("#meeting-time").val());
                var day = date.getDate() + 1;
                var month = date.getMonth() + 1;
                var year = date.getFullYear();

                if (day < 10 && month < 10) {
                     dateFor = year + '-0' + month + '-0' + day;
                }
                else if (day < 10 && month > 9) {
                    dateFor = year + '-' + month + '-0' + day;
                }
                else if (day > 9 && month < 10) {
                    dateFor = year + '-0' + month + '-' + day;
                }
                else {
                    dateFor = year + '-' + month + '-' + day;
                }

                document.getElementById("meeting-timee").setAttribute("min", dateFor);
            });

            function date_Click(e) {

            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }

            today = yyyy + '-' + mm + '-' + dd;
            document.getElementById("meeting-time").setAttribute("min", today);
                $("#meeting-timee").val('').attr('type', 'text').attr('type', 'date');
                $("#sum").val("");
                $("#rent").attr('disabled', true);

            }

            $('#meeting-timee').on('change', function () {
                var date1 = new Date($("#meeting-time").val());
                var date2 = new Date($("#meeting-timee").val());
                if (!isNaN(date1)) {
                    var daysLag = Math.ceil(Math.abs(date2.getTime() - date1.getTime()) / (1000 * 3600 * 24));
                    $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetCarById", "Car")',
                    dataType: 'json',
                    data: { id: '@Model.Car.Id' },
                    success: function (mems) {
                        console.log("car found");
                        console.log(mems);
                        if (daysLag > 0 && daysLag < 4) {
                            $("#sum").val("Price : " + mems.priceThird * daysLag + " $");
                            sum = mems.priceThird * daysLag;
                        }
                        else if (daysLag > 3 && daysLag < 10) {
                            $("#sum").val("Price : " + mems.priceSecond * daysLag + " $");
                            sum = mems.priceSecond * daysLag;
                        }
                        else if (daysLag > 9 && daysLag < 26) {
                            $("#sum").val("Price : " + mems.priceFourth * daysLag + " $");
                            sum = mems.priceFourth * daysLag;
                        }
                        else if (daysLag > 26) {
                            $("#sum").val("Price : " + mems.price * daysLag + " $");
                            sum = mems.price * daysLag;
                        }
                    },
                    error: function (ex) {
                        lert('Failed to retrieve states.' + ex);
                    }
                });
            return false;
                }

            });

            $("#rent").click(function () {
                var city = $("#city-list option:selected").text();
                var location = $("#location-list option:selected").text();
                var date1 = new Date($("#meeting-time").val());
                var date2 = new Date($("#meeting-timee").val());

                var time1 = $("#time").val();
                date1.setHours(time1.split(':')[0], time1.split(':')[1] , 0);

                var time2 = $("#time2").val();
                date2.setHours(time2.split(':')[0], time2.split(':')[1], 0);

                var loggedUser = '@User.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value';

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("AddRent", "Rent")',
                    dataType: 'json',
                    data: {
                        StartDataRend: date1.toLocaleDateString(),
                        FinishDataRend: date2.toLocaleDateString(),
                        CarId: '@Model.Car.Id',
                        LocationId: $("#location-list option:selected").val(),
                        ApplicationUserId: loggedUser.toString(),
                        Price: sum
                    },
                    success: function (mems) {
                        window.location.href = '@Url.Action("AccountPage", "Account")';
                    },
                    error: function (ex) {
                        lert('Failed to retrieve states.' + ex);
                    }
                });
            });

        });
    </script>
}

